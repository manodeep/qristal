variables:
  CI_IMAGE: registry.gitlab.com/qbau/software-and-apps/ci-dockerfiles/ubuntu-22.04:sdk-1

stages:
  - build
  - test

# Switch between merge request and branch pipelines.
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

.install_core:
  before_script:
    - whoami
    - echo $PWD
    - ls *
    - export ARTEFACTS_DIR=$PWD/../core
    # The state of the runner is persistent outside the working dir, so delete any previous core dirs.
    - rm -rf $ARTEFACTS_DIR $QB_DIR/core-local
    - mv core_artefacts $ARTEFACTS_DIR
    - cmake --install $ARTEFACTS_DIR/build

ci-build-triggered-from-upstream:
  stage: build
  image: $CI_IMAGE
  extends: .install_core
  tags: 
    - docker-heavy
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  needs:
    - project: qbau/software-and-apps/core
      job: ci-build
      ref: $UPSTREAM_REF
      artifacts: true
  script:
    - echo Using core branch $UPSTREAM_REF
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com".insteadOf https://gitlab.com
    - cmake -B build . -Dqbcore_DIR=${QB_DIR}/core-local -DCMAKE_INSTALL_PREFIX=$QB_DIR/qristal --preset=dev -DINTEGRATIONS_TAG=main -DDECODER_TAG=main
    - cmake --build build
    - rm -rf $QB_DIR/core $QB_DIR/core-local
  artifacts:
    when: always
    paths:
      - build/cmake_install.cmake
      - build/_deps
      - decoder
      - integrations

ci-tests-triggered-from-upstream:
  stage: test
  extends: .install_core
  image: $CI_IMAGE
  tags: 
    - docker-heavy
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  needs:
    - "ci-build-triggered-from-upstream"
    - project: qbau/software-and-apps/core
      job: ci-build
      ref: $UPSTREAM_REF
      artifacts: true
  script:
    - echo Using core branch $UPSTREAM_REF
    - cmake --install build
    - cmake -B build_demo1 $QB_DIR/qristal/examples/cpp/demo1
    - cmake --build build_demo1
    - ./build_demo1/demo1
    - cmake -B build_qaoa $QB_DIR/qristal/examples/cpp/qaoa
    - cmake --build build_qaoa
    - ./build_qaoa/qaoa
    - python3 $QB_DIR/qristal/examples/python/demo1.py
    - python3 $QB_DIR/qristal/examples/python/quickstart.py
    - python3 $QB_DIR/qristal/examples/python/vqee_example_1.py
    - rm -rf $QB_DIR/core $QB_DIR/core-local
    - rm -rf $QB_DIR/core $QB_DIR/qristal

ci-build-triggered-locally:
  stage: build
  image: $CI_IMAGE
  extends: .install_core
  tags: 
    - docker-heavy
  rules:
    - if: $CI_PIPELINE_SOURCE != "pipeline"
  needs:
    - project: qbau/software-and-apps/core
      job: ci-build
      ref: main
      artifacts: true
  script:
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com".insteadOf https://gitlab.com
    - cmake -B build . -Dqbcore_DIR=${QB_DIR}/core-local -DCMAKE_INSTALL_PREFIX=$QB_DIR/qristal --preset=dev -DINTEGRATIONS_TAG=main -DDECODER_TAG=main
    - cmake --build build
    - rm -rf $QB_DIR/core $QB_DIR/core-local
  artifacts:
    when: always
    paths:
      - build/cmake_install.cmake
      - build/_deps
      - decoder
      - integrations

ci-tests-triggered-locally:
  stage: test
  extends: .install_core
  image: $CI_IMAGE
  tags: 
    - docker-heavy
  rules:
    - if: $CI_PIPELINE_SOURCE != "pipeline"
  needs:
    - "ci-build-triggered-locally"
    - project: qbau/software-and-apps/core
      job: ci-build
      ref: main
      artifacts: true
  script:
    - cmake --install build
    - cmake -B build_demo1 $QB_DIR/qristal/examples/cpp/demo1
    - cmake --build build_demo1
    - ./build_demo1/demo1
    - cmake -B build_qaoa $QB_DIR/qristal/examples/cpp/qaoa
    - cmake --build build_qaoa
    - ./build_qaoa/qaoa
    - python3 $QB_DIR/qristal/examples/python/demo1.py
    - python3 $QB_DIR/qristal/examples/python/quickstart.py
    - python3 $QB_DIR/qristal/examples/python/vqee_example_1.py
    - rm -rf $QB_DIR/core $QB_DIR/core-local
    - rm -rf $QB_DIR/core $QB_DIR/qristal
